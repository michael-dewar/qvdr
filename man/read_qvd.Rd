% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_qvd.R
\name{read_qvd}
\alias{read_qvd}
\title{Read a QVD file into R}
\usage{
read_qvd(
  path,
  prefer_numeric_duals = TRUE,
  include_indices = FALSE,
  temporal_columns = integer()
)
}
\arguments{
\item{path}{Path to the \code{.qvd} file.}

\item{prefer_numeric_duals}{Logical flag indicating whether dual-valued
fields (with both numeric and textual representations) should default to
their numeric values in the main data frame. When \code{FALSE}, dual-valued
fields default to their textual representation. Regardless of the choice,
textual values are always available in the \code{text_data} component of the
result.}

\item{include_indices}{Logical flag indicating whether to include the raw
symbol table indices from the underlying reader in the metadata. These are
rarely needed but expose the entirety of the original C++ data structure.}

\item{temporal_columns}{Optional integer vector identifying columns in the
returned \code{data} frame that should be converted from Qlik's numeric day
offsets into R date or datetime objects. When supplied, integers are
interpreted as \code{Date}s and fractional values as UTC \code{POSIXct} timestamps.
When omitted, all decoded fields remain in their native numeric form.}
}
\value{
A list with three elements:
\describe{
\item{\code{metadata}}{Structured metadata mirroring the information exposed
by the qvdreader library, including table header details, field
definitions, symbol tables, and optional raw indices.}
\item{\code{data}}{A base \code{data.frame} containing the decoded field values.
Column types are inferred automatically, with an option to prefer
numeric representations for dual-valued fields.}
\item{\code{text_data}}{A \code{data.frame} of the same shape where all values are
represented textually. This is particularly useful for preserving the
textual side of dual-valued columns.}
}
}
\description{
Read a QVD file into R
}
\examples{
\dontrun{
qvd <- read_qvd("/path/to/file.qvd")
str(qvd$data)
str(qvd$metadata$table_header$fields)
}

}
